# setup.py Cheat Sheet

# Import necessary modules
from setuptools import setup, find_packages

# Basic setup
setup(
    # Name of your project
    name='my_project',

    # Version of your project
    version='1.0.0',

    # Description of your project
    description='A brief description of the project',

    # Long description, often read from a file
    long_description=open('README.md').read(),
    long_description_content_type='text/markdown',

    # Author details
    author='Your Name',
    author_email='your.email@example.com',

    # Project's main homepage
    url='https://github.com/yourusername/my_project',

    # Classifiers help users find your project
    # For a full list, see https://pypi.org/classifiers/
    classifiers=[
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'Topic :: Software Development :: Build Tools',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.6',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
    ],

    # Keywords or tags
    keywords='sample setuptools development',

    # Find all packages in your project
    packages=find_packages(),

    # List of dependencies
    install_requires=['numpy', 'pandas'],

    # Include additional files into the package
    include_package_data=True,

    # Python version requirement
    python_requires='>=3.6',

    # Custom scripts
    scripts=['scripts/myscript.py'],

    # Entry points, creating executable commands
    entry_points={
        'console_scripts': [
            'my_command=my_project.module:function',
        ],
    },
)

# Notes:
# - This file is typically used for packaging and distributing your Python project.
# - Update the fields with your project-specific information.
# - The 'setup.py' script is widely used for distributing Python packages on PyPI.

# For more detailed information, refer to the setuptools documentation.
